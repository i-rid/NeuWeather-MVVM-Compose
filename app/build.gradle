plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.neuweather_mvvm'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.neuweather_mvvm"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"" + getBaseUrl() + "\""
        buildConfigField "String", "APP_ID", "\"" + getAppId() + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        //...
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //jetpack compose
    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
//    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling"
    implementation "com.google.accompanist:accompanist-themeadapter-material:0.28.0"

    //compose animation
    implementation "androidx.compose.animation:animation:1.3.3"
    //setContent
    implementation 'androidx.activity:activity-compose:1.6.1'

    // https://github.com/fornewid/neumorphism
    implementation 'com.github.fornewid:neumorphism:0.3.0'
    //lottieFiles
    implementation "com.airbnb.android:lottie-compose:5.2.0"

    //jetpack animated svg
    implementation("androidx.compose.animation:animation-graphics:1.1.0-alpha01")
//    implementation 'androidx.compose.material:material-icons-extended'

    //network dependency -ha
    //retrofit - okhttp
    // glide image loading library
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    // network call related libraries
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // REST API calling library
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' // JSON parsing library
    implementation('com.github.ihsanbal:LoggingInterceptor:3.1.0') { // HTTP pretty log printing library
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'

    // system bars
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"
}


def getBaseUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String baseUrl = properties.getProperty("base_url")
    if(baseUrl==null)
        throw new GradleException("Add 'base_url' field at local.properties file. For more details: https://github.com/hasancse91/weather-app-android-mvp-architecture/blob/master/README.md")

    return baseUrl
}

def getAppId() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String appId = properties.getProperty("app_id")
    if(appId==null)
        throw new GradleException("Add 'app_id' field at local.properties file. For more details: https://github.com/hasancse91/weather-app-android-mvp-architecture/blob/master/README.md")

    return appId
}